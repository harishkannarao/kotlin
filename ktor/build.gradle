plugins {
    id "application"
    id "com.github.johnrengelman.shadow"
}

application {
    mainClassName = "com.harishkannarao.ktor.KtorApplication"
}

run {
    systemProperties = System.properties.stringPropertyNames().collectEntries {
        [(it): System.getProperty(it)]
    }
}

shadowJar {
    baseName = "ktor"
    classifier = "exec"
    version = null
}

dependencies {
    implementation("io.ktor:ktor-server-core:$ktorVersion")
    implementation("io.ktor:ktor-server-cio:$ktorVersion")
    implementation("io.ktor:ktor-locations:$ktorVersion")
    implementation("io.ktor:ktor-client-core:$ktorVersion")
    implementation("io.ktor:ktor-client-apache:$ktorVersion")
    implementation("io.ktor:ktor-html-builder:$ktorVersion")
    implementation("io.ktor:ktor-jackson:$ktorVersion")
    implementation("io.ktor:ktor-auth:$ktorVersion")
    implementation("io.ktor:ktor-freemarker:$ktorVersion")
    implementation("io.ktor:ktor-webjars:$ktorVersion")
    implementation("org.webjars:jquery:$jQueryVersion")
    implementation("org.webjars.npm:vue:$vueJsVersion")
    implementation("org.webjars.npm:axios:$axiosVersion")
    implementation("org.webjars.npm:feather-icons:$featherIconVersion")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    implementation("com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")
    implementation("ch.qos.logback:logback-classic:$logbackVersion")
    implementation("commons-io:commons-io:$commonsIoVersion")
    implementation("org.jdbi:jdbi3-core:$jdbiVersion")
    implementation("org.jdbi:jdbi3-sqlobject:$jdbiVersion")
    implementation("org.jdbi:jdbi3-kotlin:$jdbiVersion")
    implementation("org.jdbi:jdbi3-kotlin-sqlobject:$jdbiVersion")
    implementation("org.jdbi:jdbi3-postgres:$jdbiVersion")
    implementation("com.zaxxer:HikariCP:$hikariVersion")
    implementation("org.postgresql:postgresql:$postgresqlVersion")

    testImplementation("io.mockk:mockk:$mockkVersion")
}
